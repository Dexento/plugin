package me.Dexento.BlockChanger;

import java.util.ArrayList;
import java.util.logging.Logger;

import org.bukkit.plugin.Plugin;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.Event;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.plugin.PluginManager;
import org.bukkit.plugin.java.JavaPlugin;

public class BlockChanger extends JavaPlugin implements Listener
{
        
        private static final Logger log = Logger.getLogger("Minecraft");
        private final BlockChangerListener blockListener = new BlockChangeListener(this);
        public final ArrayList<Player> BlockChangerUsers = new ArrayList<Player>();
    public static HandlerList permissionHandler;
    
    public int id = 4;
        
        @Override
        public void onEnable()
        {
                log.info("[BlockChanger]by Dexento has been enabled!");
                PluginManager pm = getServer().getPluginManager();
                Bukkit.getServer().getPluginManager().registerEvents(this, this);
                setupPermissions();
        }
        
        @Override
        public void onDisable()
        {
                log.info("[BlockChanger] by Dexento has been disabled!");
        }
        
        @Override
        public boolean onCommand(CommandSender sender, Command cmd, String commandLabel, String[] args)
        {
                if(commandLabel.equalsIgnoreCase("BlockChanger") && permissionsCheck(sender)){
                        if(args.length > 0)
                                id = Integer.parseInt(args[0]);
                        else
                                toggleBlockChanger(sender);
                }
                
                return true;
                
        }
        
        private void toggleBlockChanger(CommandSender sender)
        {
                if( !enabled((Player) sender) )
                {
                        BlockChangerUsers.add((Player) sender);
                        ((Player) sender).sendMessage(ChatColor.RED + "BlockChanger" + ChatColor.GOLD + "has been" + ChatColor.RED + "enabled" + ChatColor.GOLD + "!");
                }
                
                else 
                {
                        BlockChangerUsers.remove((Player) sender);
                        ((Player) sender).sendMessage(ChatColor.RED + "BlockChanger" + ChatColor.GOLD + "has been" + ChatColor.RED + "disabled" + ChatColor.GOLD + "!");
                }
        }
        
        public boolean enabled(Player player)
        {
                return BlockChangerUsers.contains(player);
        }
        
        boolean permissionsCheck(CommandSender sender){
                
                if( permissionHandler == null ){
                        if( sender.isOp() )
                                return true;
                }
                
                else{
                        ((Player) sender).hasPermission("BlockChanger.use");
                                        return true;
                }
                
                return false;
        }
        
        void setupPermissions(){
                Plugin permissionsPlugin = this.getServer().getPluginManager().getPlugin("Permissions");

                if (permissionsPlugin == null) {
                    log.warning("[BlockChanger] permission system not detected, defaulting to OP.");
                    return;
                }

                permissionHandler = ((Event) permissionsPlugin).getHandlers();
        }
        
}


//BlockChangerListener class;
package me.Dexento.BlockChanger;

import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockDamageEvent;

public class BlockChangerListener implements Listener
{
        
        public static BlockChanger plugin;
        
        public BlockChangerListener(BlockChanger instance)
        {
                plugin = instance;
        }

		public void onBlockDamage(BlockDamageEvent event)
        {
                if(plugin.enabled(event.getPlayer()))
                        event.getBlock().setTypeId(plugin.id);
        }
        
}
